<h1 class="text-center my-4">Lista de Productos</h1>

<!-- Botón para agregar productos -->
<button type="button" class="btn btn-success mb-3" data-bs-toggle="modal" data-bs-target="#addProductModal">
    Agregar Producto
</button>

<!-- Filtros -->
<div class="filters mb-4 d-flex gap-2">
    <select id="categoryFilter" class="form-select">
        <option value="">Todas las categorías</option>
        <option value="Accesorios">Accesorios</option>
        <option value="Hardware">Hardware</option>
        <option value="Audio">Audio</option>
    </select>

    <select id="availabilityFilter" class="form-select">
        <option value="">Disponibilidad</option>
        <option value="true">Disponible</option>
        <option value="false">No Disponible</option>
    </select>

    <select id="sortFilter" class="form-select">
        <option value="">Ordenar por Precio</option>
        <option value="asc">Menor a Mayor</option>
        <option value="desc">Mayor a Menor</option>
    </select>
    
    <button id="applyFilters" class="btn btn-primary">Aplicar Filtros</button>
</div>

<!-- Modal para agregar producto -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addProductModalLabel">Agregar Nuevo Producto</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="productForm">
          <div class="mb-3">
            <label for="productTitle" class="form-label">Nombre:</label>
            <input type="text" id="productTitle" name="title" class="form-control" required>
          </div>

          <div class="mb-3">
            <label for="productDescription" class="form-label">Descripción:</label>
            <input type="text" id="productDescription" name="description" class="form-control" required>
          </div>

          <div class="mb-3">
            <label for="productPrice" class="form-label">Precio:</label>
            <input type="number" id="productPrice" name="price" class="form-control" required>
          </div>

          <div class="mb-3">
            <label for="productStock" class="form-label">Stock:</label>
            <input type="number" id="productStock" name="stock" class="form-control" required>
          </div>

          <div class="mb-3">
            <label for="productCategory" class="form-label">Categoría:</label>
            <input type="text" id="productCategory" name="category" class="form-control" required>
          </div>

          <div class="mb-3">
            <label for="productImage" class="form-label">Imagen (URL):</label>
            <input type="text" id="productImage" name="image" class="form-control">
          </div>

          <button type="button" id="addProductBtn" class="btn btn-primary">Agregar Producto</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Modal de Alerta para Stock Agotado -->
<div class="modal fade" id="stockAlertModal" tabindex="-1" aria-labelledby="stockAlertModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="stockAlertModalLabel">Producto Sin Stock</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        No hay stock disponible para este producto.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>

<!-- Tabla de productos en tiempo real -->
<h2>Productos Disponibles</h2>
<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Precio</th>
            <th>Stock</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody id="productList">
        {{#each products}}
            <tr>
                <td>{{this.name}}</td>
                <td>${{this.price}}</td>
                <td>{{this.stock}}</td>
                <td>
                    <button class="btn btn-success add-to-cart" data-product-id="{{this._id}}">Agregar al Carrito</button>
                    <button class="btn btn-danger delete-btn" data-product-id="{{this._id}}">Eliminar</button>
                </td>
            </tr>
        {{/each}}
    </tbody>
</table>

<!-- Sección del Carrito -->
<h2>Carrito de Compras</h2>
<table class="table">
    <thead>
        <tr>
            <th>Producto</th>
            <th>Cantidad</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody id="cartList"></tbody>
</table>
<button class="btn btn-warning" id="clearCart">Vaciar Carrito</button>

<p id="statusMessage"></p>

<script src="/socket.io/socket.io.js"></script>
<script src="/js/index.js"></script>
<script>
    const socket = io();

    document.getElementById("applyFilters").addEventListener("click", () => {
        const category = document.getElementById("categoryFilter").value;
        const availability = document.getElementById("availabilityFilter").value;
        const sort = document.getElementById("sortFilter").value;

        let query = "?";
        if (category) query += `category=${category}&`;
        if (availability) query += `available=${availability}&`;
        if (sort) query += `sort=${sort}&`;
        
        fetch(`/api/products${query}`)
            .then(res => res.json())
            .then(data => {
                const productList = document.getElementById("productList");
                productList.innerHTML = data.payload.map(product => `
                    <tr>
                        <td>${product.name}</td>
                        <td>${product.price}</td>
                        <td>${product.stock}</td>
                        <td>
                            <button class="btn btn-success add-to-cart" data-product-id="${product._id}">Agregar al Carrito</button>
                            <button class="btn btn-danger delete-btn" data-product-id="${product._id}">Eliminar</button>
                        </td>
                    </tr>
                `).join("");

                // Reasignar eventos a los nuevos botones
                document.querySelectorAll(".add-to-cart").forEach((btn) => {
                    btn.addEventListener("click", () => {
                        socket.emit("addToCart", { productId: btn.dataset.productId });
                    });
                });
                
                document.querySelectorAll(".delete-btn").forEach((btn) => {
                    btn.addEventListener("click", () => {
                        socket.emit("deleteProduct", btn.dataset.productId);
                    });
                });
            });
    });

    // Mostrar modal cuando no hay stock
    socket.on("stockUnavailable", () => {
        const stockAlertModal = new bootstrap.Modal(document.getElementById("stockAlertModal"));
        stockAlertModal.show();
    });
</script>
